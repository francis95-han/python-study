算法
算法分析
    算法是为求解一个问题需要遵循的、被清楚地制定的简单指令的集合。对于一个问题，指定某一个算法后需要确定该算法需要多少时间、多大空间等资源量进行分析
    常见的典型增长率
        c常数级 logN对数级 log(2)N对数平方级 N线性级 N(2)平方级 N(3)立方级 2（N)指数级
    一般法则
        1、for循环
            一次for循环的运行时间至多是该for循环内语句的运行时间乘以迭代的次数
        2、嵌套的for循环
            从里向外分析这些循环、在一组嵌套循环内部的一条语句总的运行时间为该语句的运行时间乘以改组所有的for循环的大小的乘积
        3、顺序语句
        	将各个语句的运行时间进行求和（也就是意味着其中的最大值就是所得的运行时间）
        4、if/else语句
        	不超过判断再加上if和else里的运行时间长者的总运行时间
    递归法则
    	1、基准情形  	无需递归即可求解
    	2、不断推进	每一次递归调用都向着基准情形靠近
    	3、设计法则	所有递归都能调用
    	4、合成效益法则   	求解一个问题的同意实例时，切勿在不同的递归调用中做重复性的工作
表、栈、队列
	表 	A1，A2，A3，A4，A5，A6 ... AN的表大小为N，N=0的表为空表




